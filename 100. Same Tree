Given the roots of two binary trees p and q, write a function to check if they are the same or not.

Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.
Input: p = [1,2,3], q = [1,2,3]
Output: true
-----------------------------------------------------------------------------------------------------------------------
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        stack = []
        stack.append(p)
        stack.append(q)
        while stack :
            a = stack.pop()
            b = stack.pop()

            if a == None and b == None :
                continue
            if (a != None and b == None) or (b != None and a == None) or (a.val != b.val) :
                return False
            
            stack.append(a.left)
            stack.append(b.left)

            stack.append(a.right)
            stack.append(b.right)

        return True
            
