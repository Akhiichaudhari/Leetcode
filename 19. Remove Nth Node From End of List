Given the head of a linked list, remove the nth node from the end of the list and return its head.
Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
-----------------------------------------------------------------------------------------------------

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        temp = head
        i = 0
        while temp :
            i = i + 1
            temp = temp.next
            
        n = i - n
        temp = ListNode(0, head)
        if n == 0 :
            return temp.next.next
        while n :
            temp = temp.next
            n = n - 1
            
        temp.next = temp.next.next
        return head
        
